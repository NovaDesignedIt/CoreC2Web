{
  "version": 3,
  "sources": ["../../@devbookhq/splitter/node_modules/react-is/cjs/react-is.development.js", "../../@devbookhq/splitter/node_modules/react-is/index.js", "../../@devbookhq/splitter/src/utils/getInnerSize.ts", "../../@devbookhq/splitter/src/useEventListener.ts", "../../@devbookhq/splitter/node_modules/style-inject/dist/style-inject.es.js", "../../@devbookhq/splitter/src/Gutter.tsx", "../../@devbookhq/splitter/src/state/reducer.actions.ts", "../../@devbookhq/splitter/src/utils/getGutterSize.ts", "../../@devbookhq/splitter/src/state/reducer.ts", "../../@devbookhq/splitter/src/utils/flattenChildren.ts", "../../@devbookhq/splitter/src/utils/isTouchEvent.ts", "../../@devbookhq/splitter/src/index.tsx"],
  "sourcesContent": ["/** @license React v17.0.2\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nvar REACT_FRAGMENT_TYPE = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\nvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isConcurrentMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "import { SplitDirection } from '../index';\n\nexport default function getInnerSize(direction: SplitDirection, element: HTMLElement) {\n  // Returns undefined if parent element has no layout yet.\n  // Or if the parent has no size.\n\n  const computedStyle = getComputedStyle(element);\n  if (!computedStyle) return;\n\n  let size = direction === SplitDirection.Horizontal ? element.clientWidth : element.clientHeight;\n\n  if (size === 0) return;\n\n  if (direction === SplitDirection.Horizontal) {\n    size -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n  } else {\n    size -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n  }\n\n  return size;\n}\n", "import { useEffect } from 'react';\n\ninterface UseAddEventListenerOptions extends AddEventListenerOptions {\n  condition: boolean;\n}\n\nfunction useEventListener(event: string, handler: (event: any) => void, deps: any[] = [], useAddEventListenerOptions: UseAddEventListenerOptions = { condition: true }) {\n  const { condition, ...addEventListenerOptions } = useAddEventListenerOptions\n  useEffect(() => {\n    if (condition) {\n      window.addEventListener(event, handler, addEventListenerOptions);\n    }\n    return () => {\n      if (condition) {\n        window.removeEventListener(event, handler)\n      }\n    };\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [event, handler, condition, ...deps]);\n}\n\nexport default useEventListener;\n", "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "import React from 'react';\nimport type { MouseEvent, TouchEvent } from 'react';\nimport { SplitDirection, GutterTheme, isTouchDevice } from './index';\n\ninterface GutterProps {\n  className?: string;\n  theme: GutterTheme;\n  draggerClassName?: string;\n  direction?: SplitDirection;\n  onDragging?: (e: MouseEvent | TouchEvent) => void;\n}\n\nconst Gutter = React.forwardRef<HTMLDivElement, GutterProps>((\n  {\n    className,\n    theme,\n    draggerClassName,\n    direction = SplitDirection.Vertical,\n    onDragging,\n  },\n  ref,\n) => {\n  const containerClass = `__dbk__gutter ${direction} ${className || theme}`;\n  const draggerClass = `__dbk__dragger ${direction} ${draggerClassName || theme}`;\n\n  return (\n    <div\n      className={containerClass}\n      ref={ref}\n      dir={direction}\n      onMouseDown={onDragging}\n      onTouchStart={isTouchDevice ? onDragging : undefined}\n    >\n      <div className={draggerClass}/>\n    </div>\n  );\n});\n\nexport default Gutter;\n\n", "import type { SplitDirection } from 'index';\n\nexport enum ActionType {\n  SetIsReadyToCompute,\n  CreatePairs,\n  CalculateSizes,\n  StartDragging,\n  StopDragging,\n}\n\nexport interface SetIsReadyToCompute {\n  type: ActionType.SetIsReadyToCompute;\n  payload: {\n    isReady: boolean,\n  };\n}\n\nexport interface CreatePairs {\n  type: ActionType.CreatePairs;\n  payload: {\n    direction: SplitDirection,\n    children: HTMLElement[],\n    gutters: HTMLElement[],\n  };\n}\n\nexport interface CalculateSizes {\n  type: ActionType.CalculateSizes;\n  payload: {\n    direction: SplitDirection,\n    gutterIdx: number;\n  };\n}\n\nexport interface StartDragging {\n  type: ActionType.StartDragging;\n  payload: {\n    gutterIdx: number;\n  };\n}\n\ninterface StopDragging {\n  type: ActionType.StopDragging;\n}\n\nexport type Action = SetIsReadyToCompute\n  | CreatePairs\n  | CalculateSizes\n  | StartDragging\n  | StopDragging;\n\n\n", "export default function getGutterSizes(gutterSize: number, isFirst: boolean, isLast: boolean) {\n  let aGutterSize: number;\n  let bGutterSize: number;\n\n  if (isFirst) {\n    aGutterSize = gutterSize / 2;\n    bGutterSize = gutterSize;\n  } else if (isLast) {\n    aGutterSize = gutterSize;\n    bGutterSize = gutterSize / 2;\n  } else {\n    aGutterSize = gutterSize;\n    bGutterSize = gutterSize;\n  }\n\n  return { aGutterSize, bGutterSize };\n};\n", "import { SplitDirection } from '../index';\nimport { Action, ActionType } from './reducer.actions';\nimport Pair from '../pair';\n\nimport getInnerSize from '../utils/getInnerSize';\nimport getGutterSizes from '../utils/getGutterSize';\n\nexport interface State {\n  isReady: boolean;\n\n  isDragging: boolean;\n  draggingIdx?: number; // Index of a gutter that is being dragged.\n\n  pairs: Pair[];\n}\n\nexport default function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.SetIsReadyToCompute: {\n      return {\n        ...state,\n        isReady: action.payload.isReady,\n      }\n    }\n    // -----------------------------------------------------------------------\n    // |     i=0     |         i=1         |        i=2       |      i=3     |\n    // |             |                     |                  |              |\n    // |           pair 0                pair 1             pair 2           |\n    // |             |                     |                  |              |\n    // -----------------------------------------------------------------------\n    case ActionType.CreatePairs: {\n      const { direction, children, gutters } = action.payload;\n\n      // All children must have common parent.\n      const parent = children[0].parentNode;\n      if (!parent) throw new Error(`Cannot create pairs - parent is undefined.`);\n      const parentSize = getInnerSize(direction, parent as HTMLElement);\n      if (parentSize === undefined) throw new Error(`Cannot create pairs - parent has undefined or zero size: ${parentSize}.`);\n\n      const pairs: Pair[] = [];\n      children.forEach((_, idx) => {\n        if (idx > 0) {\n          const a = children[idx-1];\n          const b = children[idx];\n          const gutter = gutters[idx-1];\n\n          const start = direction === SplitDirection.Horizontal\n            ? a.getBoundingClientRect().left\n            : a.getBoundingClientRect().top;\n\n          const end = direction === SplitDirection.Horizontal\n            ? b.getBoundingClientRect().right\n            : b.getBoundingClientRect().bottom;\n\n          const size = direction === SplitDirection.Horizontal\n            ? a.getBoundingClientRect().width + gutter.getBoundingClientRect().width + b.getBoundingClientRect().width\n            : a.getBoundingClientRect().height + gutter.getBoundingClientRect().height + b.getBoundingClientRect().height\n\n          const gutterSize = direction === SplitDirection.Horizontal\n            ? gutter.getBoundingClientRect().width\n            : gutter.getBoundingClientRect().height;\n\n          const pair: Pair = {\n            idx: idx-1,\n            // TODO: Do we need to have a reference to the whole elements? Aren't indexes enough?\n            a,\n            b,\n            gutter,\n            parent: parent as HTMLElement,\n            start,\n            end,\n            size,\n            gutterSize,\n            // At the start, all elements has the same width.\n            aSizePct: 100 / children.length,\n            bSizePct: 100 / children.length,\n          };\n\n          pairs.push(pair);\n        }\n      });\n\n      return {\n        ...state,\n        pairs,\n      };\n    }\n    case ActionType.StartDragging: {\n      const { gutterIdx } = action.payload;\n      return {\n        ...state,\n        isDragging: true,\n        draggingIdx: gutterIdx,\n      };\n    }\n    case ActionType.StopDragging: {\n      return {\n        ...state,\n        isDragging: false,\n      };\n    }\n    // Recalculates the stored sizes based on the actual elements' sizes.\n    case ActionType.CalculateSizes: {\n      // We need to calculate sizes only for the pair\n      // that has the moved gutter.\n      const { direction, gutterIdx } = action.payload;\n      const pair = state.pairs[gutterIdx];\n\n      const parentSize = getInnerSize(direction, pair.parent);\n      if (!parentSize) throw new Error(`Cannot calculate sizes - 'pair.parent' has undefined or zero size.`);\n\n      const gutterSize = pair.gutter[direction === SplitDirection.Horizontal ? 'clientWidth' : 'clientHeight'];\n\n      const isFirst = gutterIdx === 0;\n      const isLast = gutterIdx === state.pairs.length - 1;\n      const { aGutterSize, bGutterSize } = getGutterSizes(gutterSize, isFirst, isLast);\n\n      let start: number;\n      let end: number;\n      let size: number;\n      let aSizePct: number;\n      let bSizePct: number;\n\n      if (direction === SplitDirection.Horizontal) {\n        start = pair.a.getBoundingClientRect().left;\n\n        end = pair.b.getBoundingClientRect().right;\n\n        aSizePct = ((pair.a.getBoundingClientRect().width + aGutterSize) / parentSize) * 100;\n        bSizePct = ((pair.b.getBoundingClientRect().width + bGutterSize) / parentSize) * 100;\n\n        size =\n          pair.a.getBoundingClientRect().width +\n          aGutterSize +\n          bGutterSize +\n          pair.b.getBoundingClientRect().width;\n      } else {\n        start = pair.a.getBoundingClientRect().top;\n\n        end = pair.b.getBoundingClientRect().bottom;\n\n        aSizePct = ((pair.a.getBoundingClientRect().height + aGutterSize) / parentSize) * 100;\n        bSizePct = ((pair.b.getBoundingClientRect().height + bGutterSize) / parentSize) * 100;\n\n        size =\n          pair.a.getBoundingClientRect().height +\n          aGutterSize +\n          bGutterSize +\n          pair.b.getBoundingClientRect().height;\n      }\n\n      state.pairs[gutterIdx] = {\n        ...pair,\n        start,\n        end,\n        size,\n        aSizePct,\n        bSizePct,\n        gutterSize,\n      };\n\n      return {\n        ...state\n      };\n    }\n    default:\n      return state;\n  }\n}\n\n", "// Taken from https://github.com/grrowl/react-keyed-flatten-children\n\n/* Returns React children into an array, flattening fragments. */\nimport {\n  ReactNode,\n  ReactChild,\n  Children,\n  isValidElement,\n  cloneElement\n} from 'react';\nimport { isFragment } from 'react-is';\n\nexport default function flattenChildren(\n  children: ReactNode,\n  depth: number = 0,\n  keys: (string | number)[] = []\n): ReactChild[] {\n  return Children.toArray(children).reduce(\n    (acc: ReactChild[], node, nodeIndex) => {\n      if (isFragment(node)) {\n        acc.push.apply(\n          acc,\n          flattenChildren(\n            node.props.children,\n            depth + 1,\n            keys.concat(node.key || nodeIndex)\n          )\n        );\n      } else {\n        if (isValidElement(node)) {\n          acc.push(\n            cloneElement(node, {\n              key: keys.concat(String(node.key)).join('.')\n            })\n          );\n        } else if (typeof node === 'string' || typeof node === 'number') {\n          acc.push(node);\n        }\n      }\n      return acc;\n    },\n    []\n  );\n}\n", "import type { MouseEvent, TouchEvent } from 'react';\n\nexport const isTouchEvent = (e: MouseEvent | TouchEvent): e is TouchEvent => {\n  return 'changedTouches' in e\n}\n", "import React, {\n  useEffect,\n  useReducer,\n  useRef,\n} from 'react';\nimport type { MouseEvent, TouchEvent } from 'react';\n\nimport './index.css';\nimport getInnerSize from './utils/getInnerSize';\nimport useEventListener from './useEventListener';\nimport Gutter from './Gutter';\nimport { ActionType } from './state/reducer.actions';\nimport reducer, { State } from './state/reducer';\nimport getGutterSizes from './utils/getGutterSize';\nimport flattenChildren from './utils/flattenChildren';\nimport { isTouchEvent } from 'utils/isTouchEvent';\n\nexport enum SplitDirection {\n  Horizontal = 'Horizontal',\n  Vertical = 'Vertical',\n}\n\nexport enum GutterTheme {\n  Light = 'Light',\n  Dark = 'Dark',\n}\n\nconst DefaultMinSize = 16;\n\nexport const isTouchDevice = typeof window !== 'undefined' && 'ontouchstart' in window;\n\n// users touch or mouse position\nfunction getPosition(dir: SplitDirection, e: MouseEvent | TouchEvent) {\n  const targetsValueRef = isTouchEvent(e) ? e.changedTouches[0] : e;\n  if (dir === SplitDirection.Horizontal) return targetsValueRef.clientX;\n  return targetsValueRef.clientY;\n}\n\nfunction getCursorIcon(dir: SplitDirection) {\n  if (dir === SplitDirection.Horizontal) return 'col-resize';\n  return 'row-resize';\n}\n\n/*\nconst stateInit: State = (direction: SplitDirection = SplitDirection.Horizontal) => ({\n  direction,\n  isDragging: false,\n  pairs: [],\n});\n*/\n\nconst initialState: State = {\n  isReady: false,\n  isDragging: false,\n  pairs: [],\n}\n\ninterface SplitProps {\n  direction?: SplitDirection;\n  minWidths?: number[]; // In pixels.\n  minHeights?: number[]; // In pixels.\n  initialSizes?: number[]; // In percentage.\n  gutterTheme?: GutterTheme;\n  gutterClassName?: string;\n  draggerClassName?: string;\n  children?: React.ReactNode;\n  onResizeStarted?: (pairIdx: number) => void;\n  onResizeFinished?: (pairIdx: number, newSizes: number[]) => void;\n  classes?: string[];\n}\n\nfunction Split({\n  direction = SplitDirection.Horizontal,\n  minWidths = [],\n  minHeights = [],\n  initialSizes,\n  gutterTheme = GutterTheme.Dark,\n  gutterClassName,\n  draggerClassName,\n  children: reactChildren,\n  onResizeStarted,\n  onResizeFinished,\n  classes = [],\n}: SplitProps) {\n  const children = flattenChildren(reactChildren)\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const childRefs = useRef<HTMLElement[]>([]);\n  const gutterRefs = useRef<HTMLElement[]>([]);\n  // We want to reset refs on each re-render so they don't contain old references.\n  childRefs.current = [];\n  gutterRefs.current = [];\n\n  // Helper dispatch functions.\n  const setIsReadyToCompute = React.useCallback((isReady: boolean) => {\n    dispatch({\n      type: ActionType.SetIsReadyToCompute,\n      payload: { isReady },\n    })\n  }, [])\n\n  const startDragging = React.useCallback((direction: SplitDirection, gutterIdx: number) => {\n    dispatch({\n      type: ActionType.StartDragging,\n      payload: { gutterIdx },\n    });\n\n    const pair = state.pairs[gutterIdx];\n    onResizeStarted?.(pair.idx)\n\n    // Disable selection.\n    pair.a.style.userSelect = 'none';\n    pair.b.style.userSelect = 'none';\n\n    // Set the mouse cursor.\n    // Must be done at multiple levels, nut just for a gutter.\n    // The mouse cursor might move outside of the gutter element.\n    pair.gutter.style.cursor = getCursorIcon(direction);\n    pair.parent.style.cursor = getCursorIcon(direction);\n    document.body.style.cursor = getCursorIcon(direction);\n  }, [state.pairs]);\n\n  const stopDragging = React.useCallback(() => {\n    dispatch({\n      type: ActionType.StopDragging,\n    });\n\n    // The callback receives an index of the resized pair and new sizes of all child elements.\n    const allSizes: number[] = [];\n    for (let idx = 0; idx < state.pairs.length; idx++) {\n      const pair = state.pairs[idx];\n      const parentSize = getInnerSize(direction, pair.parent);\n      if (parentSize === undefined) throw new Error(`Cannot call the 'onResizeFinished' callback - parentSize is undefined`);\n      if (pair.gutterSize === undefined) throw new Error(`Cannot call 'onResizeFinished' callback - gutterSize is undefined`);\n\n      const isFirst = idx === 0;\n      const isLast = idx === state.pairs.length - 1;\n\n      const aSize = pair.a.getBoundingClientRect()[direction === SplitDirection.Horizontal ? 'width' : 'height'];\n      const { aGutterSize, bGutterSize } = getGutterSizes(pair.gutterSize, isFirst, isLast);\n      const aSizePct = ((aSize + aGutterSize) / parentSize) * 100;\n      allSizes.push(aSizePct);\n\n      if (isLast) {\n        const bSize = pair.b.getBoundingClientRect()[direction === SplitDirection.Horizontal ? 'width' : 'height'];\n        const bSizePct = ((bSize + bGutterSize) / parentSize) * 100;\n        allSizes.push(bSizePct);\n      }\n    }\n\n    if (state.draggingIdx === undefined) throw new Error(`Could not reset cursor and user-select because 'state.draggingIdx' is undefined`);\n    const pair = state.pairs[state.draggingIdx];\n    onResizeFinished?.(pair.idx, allSizes);\n\n    // Disable selection.\n    pair.a.style.userSelect = '';\n    pair.b.style.userSelect = '';\n\n    // Set the mouse cursor.\n    // Must be done at multiple levels, not just for a gutter.\n    // The mouse cursor might move outside of the gutter element.\n    pair.gutter.style.cursor = '';\n    pair.parent.style.cursor = '';\n    document.body.style.cursor = '';\n  }, [state.draggingIdx, state.pairs, direction]);\n\n  const calculateSizes = React.useCallback((direction: SplitDirection, gutterIdx: number) => {\n    dispatch({\n      type: ActionType.CalculateSizes,\n      payload: { direction, gutterIdx },\n    });\n  }, []);\n\n  const createPairs = React.useCallback((direction: SplitDirection, children: HTMLElement[], gutters: HTMLElement[]) => {\n    dispatch({\n      type: ActionType.CreatePairs,\n      payload: { direction, children, gutters },\n    });\n  }, []);\n  /////////\n\n  // This method is called on the initial render.\n  // It iterates through the all children sets their initial sizes.\n  const setInitialSizes = React.useCallback((\n    direction: SplitDirection,\n    children: HTMLElement[],\n    gutters: HTMLElement[],\n    initialSizes?: number[],\n  ) => {\n    // All children must have common parent.\n    const parent = children[0].parentNode;\n    if (!parent) throw new Error(`Cannot set initial sizes - parent is undefined`);\n    const parentSize = getInnerSize(direction, parent as HTMLElement);\n    if (parentSize === undefined) throw new Error(`Cannot set initial sizes - parent has undefined size`);\n\n    children.forEach((c, idx) => {\n      const isFirst = idx === 0;\n      const isLast = idx === children.length - 1;\n\n      let gutterSize = 0\n      if (children.length > 1) {\n        const gutter = gutters[isLast ? idx-1 : idx];\n        gutterSize = gutter.getBoundingClientRect()[direction === SplitDirection.Horizontal ? 'width' : 'height'];\n        gutterSize = isFirst || isLast ? gutterSize / 2 : gutterSize;\n      }\n\n      let calc: string;\n      if (initialSizes && idx < initialSizes.length)  {\n        calc = `calc(${initialSizes[idx]}% - ${gutterSize}px)`;\n      } else {\n        // '100 / children.length' makes all the children same wide.\n        calc = `calc(${100 / children.length}% - ${gutterSize}px)`;\n      }\n\n      if (direction === SplitDirection.Horizontal) {\n        c.style.width = calc;\n        // Reset the child wrapper's height because the direction could have changed.\n        c.style.height = '100%';\n      } else {\n        c.style.height = calc;\n        // Reset the child wrapper's width because the direction could have changed.\n        c.style.width = '100%';\n      }\n    });\n  }, []);\n\n  // Here we actually change the width of children.\n  // We convert the element's sizes into percentage\n  // and let the CSS 'calc' function do the heavy lifting.\n  // Size of 'pair.a' is same as 'offset'.\n  //\n  // For just 2 children total, the percentage adds up always to 100.\n  // For >2 children total, the percentage adds to less than 100.\n  // That's because a single gutter changes sizes of only the given pair of children.\n  // Each gutter changes size only of the two adjacent elements.\n  // -----------------------------------------------------------------------\n  // |                     |||                     |||                     |\n  // |       33.3%         |||        33.3%        |||       33.3%         |\n  // |                     |||                     |||                     |\n  // |                     |||                     |||                     |\n  // -----------------------------------------------------------------------\n  const adjustSize = React.useCallback((direction: SplitDirection, offset: number) => {\n    if (state.draggingIdx === undefined) throw new Error(`Cannot adjust size - 'draggingIdx' is undefined`);\n\n    const pair = state.pairs[state.draggingIdx];\n    if (pair.size === undefined) throw new Error(`Cannot adjust size - 'pair.size' is undefined`);\n    if (pair.gutterSize === undefined) throw new Error(`Cannot adjust size - 'pair.gutterSize' is undefined`);\n    const percentage = pair.aSizePct + pair.bSizePct;\n\n    const aSizePct = (offset / pair.size) * percentage;\n    const bSizePct = percentage - (offset / pair.size) * percentage;\n\n    const isFirst = state.draggingIdx === 0;\n    const isLast = state.draggingIdx === state.pairs.length - 1;\n    const { aGutterSize, bGutterSize } = getGutterSizes(pair.gutterSize, isFirst, isLast);\n\n    const aCalc = `calc(${aSizePct}% - ${aGutterSize}px)`;\n    const bCalc = `calc(${bSizePct}% - ${bGutterSize}px)`;\n    if (direction === SplitDirection.Horizontal) {\n      pair.a.style.width = aCalc;\n      pair.b.style.width = bCalc;\n    } else {\n      pair.a.style.height = aCalc;\n      pair.b.style.height = bCalc;\n    }\n  }, [state.draggingIdx, state.pairs, direction]);\n\n  const drag = React.useCallback((e: MouseEvent | TouchEvent, direction: SplitDirection, minSizes: number[]) => {\n    if (!state.isDragging) return\n    if (state.draggingIdx === undefined) throw new Error(`Cannot drag - 'draggingIdx' is undefined`);\n\n    const pair = state.pairs[state.draggingIdx];\n    if (pair.start === undefined) throw new Error(`Cannot drag - 'pair.start' is undefined`);\n    if (pair.size === undefined) throw new Error(`Cannot drag - 'pair.size' is undefined`);\n    if (pair.gutterSize === undefined) throw new Error(`Cannot drag - 'pair.gutterSize' is undefined`);\n\n    // 'offset' is the width of the 'a' element in a pair.\n    let offset = getPosition(direction, e) - pair.start;\n\n    // Limit the maximum size and the minimum size of resized children.\n\n    let aMinSize = DefaultMinSize;\n    let bMinSize = DefaultMinSize;\n    if (minSizes.length > state.draggingIdx) {\n      aMinSize = minSizes[state.draggingIdx];\n    }\n    if (minSizes.length >= state.draggingIdx + 1) {\n      bMinSize = minSizes[state.draggingIdx + 1];\n    }\n\n    // TODO: We should check whether the parent is big enough\n    // to support these min sizes.\n    if (offset < pair.gutterSize + aMinSize) {\n      offset = pair.gutterSize + aMinSize;\n    }\n\n    if (offset >= pair.size - (pair.gutterSize + bMinSize)) {\n      offset = pair.size - (pair.gutterSize + bMinSize);\n    }\n\n    adjustSize(direction, offset);\n  }, [state.isDragging, state.draggingIdx, state.pairs, adjustSize]);\n\n  function handleStartDragging(gutterIdx: number) {\n    calculateSizes(direction, gutterIdx);\n    startDragging(direction, gutterIdx);\n  }\n\n  const onStopDragging = () => {\n    if (!state.isDragging) return;\n    if (state.draggingIdx === undefined)\n      throw new Error(`Cannot calculate sizes after dragging = 'state.draggingIdx' is undefined`);\n    calculateSizes(direction, state.draggingIdx);\n    stopDragging();\n  };\n\n  const onMove = (e: MouseEvent | TouchEvent) => {\n    if (!state.isDragging) return;\n    if (isTouchEvent(e)) {\n      // touch event also scrolls the page, so we need to prevent that\n      e.preventDefault();\n    }\n    drag(e, direction, direction === SplitDirection.Horizontal ? minWidths : minHeights);\n  };\n\n  useEventListener(\"mouseup\", onStopDragging, [state.isDragging, stopDragging]);\n  useEventListener(\"mousemove\", onMove, [direction, state.isDragging, drag, minWidths, minHeights]);\n\n  useEventListener(\"touchend\", onStopDragging, [state.isDragging, stopDragging], { condition: isTouchDevice });\n  useEventListener(\"touchmove\", onMove, [direction, state.isDragging, drag, minWidths, minHeights], { condition: isTouchDevice, passive: !isTouchDevice });\n\n  // This makes sure that Splitter properly re-renders if parent's size changes dynamically.\n  useEffect(function watchParentSize() {\n    if (!containerRef.current) return\n    const el = containerRef.current.parentElement\n\n    // Splitter must have a parent element. In the most trivial example it's either <body> or <html>.\n    if (!el) return\n\n    // TODO: Potential performance issue!\n    // When nesting Splitters the `observer` is registered for each nesting \"level\".\n    // Splitter's parent element is another Splitter in the nesting use case.\n    const observer = new ResizeObserver(() => {\n      const style = getComputedStyle(el)\n      const size = direction === SplitDirection.Horizontal ? el.clientWidth : el.clientHeight\n      const isReady = !!style && !!size\n      setIsReadyToCompute(isReady)\n    })\n    observer.observe(el)\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [\n    containerRef.current,\n    direction,\n  ])\n\n  // Initial setup, runs every time the child views change.\n  useEffect(function initialSetup() {\n    if (!state.isReady) return;\n    if (childRefs.current && !(childRefs.current[0] as any).offsetParent) return;\n    // By the time first useEffect runs refs should be already set, unless something really bad happened.\n    if (!childRefs.current || !gutterRefs.current) {\n      throw new Error(`Cannot create pairs - either variable 'childRefs' or 'gutterRefs' is undefined`);\n    }\n\n    // Don't create pairs if there's only one child.\n    if (children.length <= 1) {\n      setInitialSizes(direction, childRefs.current, gutterRefs.current, initialSizes);\n    } else {\n      setInitialSizes(direction, childRefs.current, gutterRefs.current, initialSizes);\n      createPairs(direction, childRefs.current, gutterRefs.current);\n    }\n\n  }, [\n    reactChildren,\n    state.isReady,\n    direction,\n    setInitialSizes,\n    createPairs,\n    initialSizes,\n  ]);\n\n  function addRef(refs: typeof childRefs | typeof gutterRefs, el: any) {\n    if (!refs.current) throw new Error(`Can't add element to ref object - ref isn't initialized`);\n    if (el && !refs.current.includes(el)) {\n      refs.current.push(el);\n    }\n  }\n\n  return (\n    <div\n      className={'__dbk__container ' + `${direction}`}\n      ref={containerRef}\n    >\n      {state.isReady && children.map((c, idx) => (\n        <React.Fragment key={idx}>\n          <div\n            ref={el => addRef(childRefs, el)}\n            className={'__dbk__child-wrapper ' + (idx < classes.length ? classes[idx] : '')}\n          >{c}\n          </div>\n\n          {/* Gutter is between each two child views. */}\n          {idx < (children as React.ReactNodeArray).length - 1 &&\n            <Gutter\n              ref={el => addRef(gutterRefs, el)}\n              className={gutterClassName}\n              theme={gutterTheme}\n              draggerClassName={draggerClassName}\n              direction={direction}\n              onDragging={() => handleStartDragging(idx)}\n            />\n          }\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\nexport type {\n  SplitProps\n}\nexport default Split;\n"],
  "mappings": "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",
  "names": ["getInnerSize", "direction", "element", "computedStyle", "getComputedStyle", "size", "SplitDirection", "Horizontal", "clientWidth", "clientHeight", "parseFloat", "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "useEventListener", "event", "handler", "deps", "useAddEventListenerOptions", "condition", "addEventListenerOptions", "useEffect", "window", "addEventListener", "removeEventListener", "css", "ref", "insertAt", "document", "head", "getElementsByTagName", "style", "createElement", "type", "firstChild", "insertBefore", "appendChild", "styleSheet", "cssText", "createTextNode", "Gutter", "React", "forwardRef", "className", "theme", "draggerClassName", "Vertical", "onDragging", "containerClass", "draggerClass", "_jsx", "dir", "onMouseDown", "onTouchStart", "isTouchDevice", "undefined", "ActionType", "getGutterSizes", "gutterSize", "isFirst", "isLast", "aGutterSize", "bGutterSize", "reducer", "state", "action", "SetIsReadyToCompute", "isReady", "payload", "CreatePairs", "children", "gutters", "parent", "parentNode", "Error", "parentSize", "pairs", "forEach", "_", "idx", "a", "b", "gutter", "start", "getBoundingClientRect", "left", "top", "end", "right", "bottom", "width", "height", "pair", "aSizePct", "length", "bSizePct", "push", "StartDragging", "gutterIdx", "isDragging", "draggingIdx", "StopDragging", "CalculateSizes", "flattenChildren", "depth", "keys", "Children", "toArray", "reduce", "acc", "node", "nodeIndex", "isFragment", "apply", "props", "concat", "key", "isValidElement", "cloneElement", "String", "join", "isTouchEvent", "e", "GutterTheme", "getCursorIcon", "initialState", "Split", "minWidths", "minHeights", "initialSizes", "gutterTheme", "Dark", "gutterClassName", "reactChildren", "onResizeStarted", "onResizeFinished", "classes", "dispatch", "useReducer", "containerRef", "useRef", "childRefs", "gutterRefs", "current", "setIsReadyToCompute", "useCallback", "startDragging", "userSelect", "cursor", "body", "stopDragging", "allSizes", "aSize", "calculateSizes", "createPairs", "setInitialSizes", "c", "calc", "adjustSize", "offset", "percentage", "aCalc", "bCalc", "drag", "minSizes", "targetsValueRef", "changedTouches", "clientX", "clientY", "aMinSize", "bMinSize", "onStopDragging", "onMove", "preventDefault", "addRef", "refs", "el", "includes", "passive", "parentElement", "observer", "ResizeObserver", "observe", "disconnect", "offsetParent", "map", "_jsxs", "Fragment", "handleStartDragging"]
}
